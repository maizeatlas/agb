package org.accretegb.modules.hibernate;
// Generated Jan 7, 2016 12:35:46 PM by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * StockComposition generated by hbm2java
 */
@Entity
@Table(name = "stock_composition", catalog = "agbv2")
public class StockComposition implements java.io.Serializable {

	private Integer stockCompositionId;
	private MateMethodConnect mateMethodConnect;
	private ObservationUnit observationUnit;
	private Stock stockByStockId;
	private Stock stockByMixFromStockId;
	private MeasurementUnit measurementUnit;
	private Integer mixQuantity;
	private Integer mateLink;

	public StockComposition() {
	}

	public StockComposition(MateMethodConnect mateMethodConnect, ObservationUnit observationUnit, Stock stockByStockId,
			Stock stockByMixFromStockId, MeasurementUnit measurementUnit,
			Integer mixQuantity, Integer mateLink) {
		this.mateMethodConnect = mateMethodConnect;
		this.observationUnit = observationUnit;
		this.stockByStockId = stockByStockId;
		this.stockByMixFromStockId = stockByMixFromStockId;
		this.measurementUnit = measurementUnit;
		this.mixQuantity = mixQuantity;
		this.mateLink = mateLink;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "stock_composition_id", unique = true, nullable = false)
	public Integer getStockCompositionId() {
		return this.stockCompositionId;
	}

	public void setStockCompositionId(Integer stockCompositionId) {
		this.stockCompositionId = stockCompositionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mate_method_connect_id")
	public MateMethodConnect getMateMethodConnect() {
		return this.mateMethodConnect;
	}

	public void setMateMethodConnect(MateMethodConnect mateMethodConnect) {
		this.mateMethodConnect = mateMethodConnect;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "observation_unit_id")
	public ObservationUnit getObservationUnit() {
		return this.observationUnit;
	}

	public void setObservationUnit(ObservationUnit observationUnit) {
		this.observationUnit = observationUnit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stock_id",nullable = false)
	public Stock getStockByStockId() {
		return this.stockByStockId;
	}

	public void setStockByStockId(Stock stockByStockId) {
		this.stockByStockId = stockByStockId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mix_from_stock_id")
	public Stock getStockByMixFromStockId() {
		return this.stockByMixFromStockId;
	}

	public void setStockByMixFromStockId(Stock stockByMixFromStockId) {
		this.stockByMixFromStockId = stockByMixFromStockId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "measurement_unit_id")
	public MeasurementUnit getMeasurementUnit() {
		return this.measurementUnit;
	}

	public void setMeasurementUnit(MeasurementUnit measurementUnit) {
		this.measurementUnit = measurementUnit;
	}


	@Column(name = "mix_quantity")
	public Integer getMixQuantity() {
		return this.mixQuantity;
	}

	public void setMixQuantity(Integer mixQuantity) {
		this.mixQuantity = mixQuantity;
	}

	@Column(name = "mate_link")
	public Integer getMateLink() {
		return this.mateLink;
	}

	public void setMateLink(Integer mateLink) {
		this.mateLink = mateLink;
	}

}
