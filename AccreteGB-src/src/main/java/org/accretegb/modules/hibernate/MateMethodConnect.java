package org.accretegb.modules.hibernate;
// Generated Jan 7, 2016 12:35:46 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * MateMethodConnect generated by hbm2java
 */
@Entity
@Table(name = "mate_method_connect", catalog = "agbv2" )
public class MateMethodConnect implements java.io.Serializable {

	private Integer mateMethodConnectId;
	private Mate mate;
	private MateMethod mateMethod;
	private Set<StockComposition> mixFromStocks = new HashSet(0);
	private Set<ObservationUnit> observationUnits = new HashSet(0);

	public MateMethodConnect() {
	}

	public MateMethodConnect(Mate mate, MateMethod mateMethod, Set<StockComposition> mixFromStocks,
			Set<ObservationUnit> observationUnits) {
		this.mate = mate;
		this.mateMethod = mateMethod;
		this.mixFromStocks = mixFromStocks;
		this.observationUnits = observationUnits;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "mate_method_connect_id", unique = true, nullable = false)
	public Integer getMateMethodConnectId() {
		return this.mateMethodConnectId;
	}

	public void setMateMethodConnectId(Integer mateMethodConnectId) {
		this.mateMethodConnectId = mateMethodConnectId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mate_id",nullable = false)
	public Mate getMate() {
		return this.mate;
	}

	public void setMate(Mate mate) {
		this.mate = mate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mate_method_id")
	public MateMethod getMateMethod() {
		return this.mateMethod;
	}

	public void setMateMethod(MateMethod mateMethod) {
		this.mateMethod = mateMethod;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mateMethodConnect")
	public Set<StockComposition> getStockCompositions() {
		return this.mixFromStocks;
	}

	public void setStockCompositions(Set<StockComposition> mixFromStocks) {
		this.mixFromStocks = mixFromStocks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mateMethodConnect")
	public Set<ObservationUnit> getObservationUnits() {
		return this.observationUnits;
	}

	public void setObservationUnits(Set<ObservationUnit> observationUnits) {
		this.observationUnits = observationUnits;
	}

}
