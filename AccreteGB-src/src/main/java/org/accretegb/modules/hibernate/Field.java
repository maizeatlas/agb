package org.accretegb.modules.hibernate;
// Generated Jan 7, 2016 12:35:46 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Field generated by hbm2java
 */
@Entity
@Table(name = "field", catalog = "agbv2")
public class Field implements java.io.Serializable {

	private Integer fieldId;
	private Location location;
	private String fieldName;
	private String fieldNumber;
	private String altitude;
	private String latitude;
	private String longitude;
	private String fieldComments;
	private Set<CollectionInfo> collectionInfos = new HashSet(0);
	private Set<ObservationUnit> observationUnits = new HashSet(0);
	private Set<FieldOwner> fieldOwners = new HashSet(0);
	private Set<MeasurementValue> measurementValues = new HashSet(0);

	public Field() {
	}

	public Field(Location location, String fieldName, String fieldNumber, String altitude,
			String latitude, String longitude, String fieldComments, Set<CollectionInfo> collectionInfos, Set<ObservationUnit> observationUnits,
			Set<FieldOwner> fieldOwners, Set<MeasurementValue> measurementValues) {
		this.location = location;
		this.fieldName = fieldName;
		this.fieldNumber = fieldNumber;
		this.altitude = altitude;
		this.latitude = latitude;
		this.longitude = longitude;
		this.fieldComments = fieldComments;
		this.collectionInfos = collectionInfos;
		this.observationUnits = observationUnits;
		this.fieldOwners = fieldOwners;
		this.measurementValues = measurementValues;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "field_id", unique = true, nullable = false)
	public Integer getFieldId() {
		return this.fieldId;
	}

	public void setFieldId(Integer fieldId) {
		this.fieldId = fieldId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id", nullable = false)
	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}


	@Column(name = "field_name")
	public String getFieldName() {
		return this.fieldName;
	}

	public void setFieldName(String fieldName) {
		this.fieldName = fieldName;
	}

	@Column(name = "field_number")
	public String getFieldNumber() {
		return this.fieldNumber;
	}

	public void setFieldNumber(String fieldNumber) {
		this.fieldNumber = fieldNumber;
	}

	@Column(name = "altitude")
	public String getAltitude() {
		return this.altitude;
	}

	public void setAltitude(String altitude) {
		this.altitude = altitude;
	}

	@Column(name = "latitude")
	public String getLatitude() {
		return this.latitude;
	}

	public void setLatitude(String latitude) {
		this.latitude = latitude;
	}

	@Column(name = "longitude")
	public String getLongitude() {
		return this.longitude;
	}

	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}

	@Column(name = "field_comments", length = 65535)
	public String getFieldComments() {
		return this.fieldComments;
	}

	public void setFieldComments(String fieldComments) {
		this.fieldComments = fieldComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "field")
	public Set<CollectionInfo> getCollectionInfos() {
		return this.collectionInfos;
	}

	public void setCollectionInfos(Set<CollectionInfo> collectionInfos) {
		this.collectionInfos = collectionInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "field")
	public Set<ObservationUnit> getObservationUnits() {
		return this.observationUnits;
	}

	public void setObservationUnits(Set<ObservationUnit> observationUnits) {
		this.observationUnits = observationUnits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "field")
	public Set<FieldOwner> getFieldOwners() {
		return this.fieldOwners;
	}

	public void setFieldOwners(Set<FieldOwner> fieldOwners) {
		this.fieldOwners = fieldOwners;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "field")
	public Set<MeasurementValue> getMeasurementValues() {
		return this.measurementValues;
	}

	public void setMeasurementValues(Set<MeasurementValue> measurementValues) {
		this.measurementValues = measurementValues;
	}

}
