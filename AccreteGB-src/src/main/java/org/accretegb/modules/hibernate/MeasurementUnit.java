package org.accretegb.modules.hibernate;
// Generated Jan 7, 2016 12:35:46 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * MeasurementUnit generated by hbm2java
 */
@Entity
@Table(name = "measurement_unit", catalog = "agbv2" )
public class MeasurementUnit implements java.io.Serializable {

	private Integer measurementUnitId;
	private String units;
	private Set<StockComposition> mixFromStocks = new HashSet(0);
	private Set<ExperimentFactorValue> experimentFactorValues = new HashSet(0);
	private Set<MeasurementParameter> measurementParameters = new HashSet(0);

	public MeasurementUnit() {
	}

	public MeasurementUnit(String units, Set<StockComposition> mixFromStocks,
			Set<ExperimentFactorValue> experimentFactorValues, Set<MeasurementParameter> measurementParameters) {
		this.units = units;
		this.mixFromStocks = mixFromStocks;
		this.experimentFactorValues = experimentFactorValues;
		this.measurementParameters = measurementParameters;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "measurement_unit_id", unique = true, nullable = false)
	public Integer getMeasurementUnitId() {
		return this.measurementUnitId;
	}

	public void setMeasurementUnitId(Integer measurementUnitId) {
		this.measurementUnitId = measurementUnitId;
	}

	@Column(name = "units",nullable = false)
	public String getUnitType() {
		return this.units;
	}

	public void setUnitType(String units) {
		this.units = units;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "measurementUnit")
	public Set<StockComposition> getStockCompositions() {
		return this.mixFromStocks;
	}

	public void setStockCompositions(Set<StockComposition> mixFromStocks) {
		this.mixFromStocks = mixFromStocks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "measurementUnit")
	public Set<ExperimentFactorValue> getExperimentFactorValues() {
		return this.experimentFactorValues;
	}

	public void setExperimentFactorValues(Set<ExperimentFactorValue> experimentFactorValues) {
		this.experimentFactorValues = experimentFactorValues;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "measurementUnit")
	public Set<MeasurementParameter> getMeasurementParameters() {
		return this.measurementParameters;
	}

	public void setMeasurementParameters(Set<MeasurementParameter> measurementParameters) {
		this.measurementParameters = measurementParameters;
	}

}
